{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/userFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGfC,mBAAS,IAHM,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAqB9C,OACI,0BAAMC,SAfW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAS,OAST,6BACA,8CACA,6BACA,6BACA,2BACIO,YAAY,uDACZC,KAAK,OACLC,MAAQV,EACRW,SA3Bc,SAAER,GACxBF,EAASE,EAAES,OAAOF,UA4Bd,6BACA,+BCpCCG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIrC,OACI,yBAAKC,UAAU,QAEX,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,+BAAKA,EAAL,O,uBCVCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAUF,GAF9C,gEAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,UAAUhB,QAVhB,kBAgBZY,GAhBY,4CAAH,sDCIPK,EAAU,SAAC,GAAoB,IAAjBZ,EAAgB,EAAhBA,SAAgB,ECCf,SAACA,GAAc,IAAD,EAEZtB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAXAC,qBAAW,WACPjB,EAASC,GACJiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAItB,CAACb,IAEGc,EDlByBK,CAAanB,GAAhCU,EAH0B,EAGhCJ,KAAcO,EAHkB,EAGlBA,QAErB,OACI,oCACI,wBAAIjB,UAAU,oCAAd,aAA4DI,GAE1Da,GAAW,0CACb,yBAAKjB,UAAU,aAEPc,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIW,IAAKX,EAAIhB,IACJgB,UEdpBY,EAAe,WAAM,MAGM3C,mBAAS,CAAC,aAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAY9B,OACI,oCACI,0DACA,6BAEA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,4BAEQ6C,EAAWd,KAAK,SAACR,GAAD,OACZ,kBAAC,EAAD,CACIoB,IAAMpB,EACNA,SAAUA,U,YCnBtCuB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b05b199c.chunk.js","sourcesContent":["\nimport React, { useState } from 'react'\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ( {setCategories} ) => {\n\n\n    const [inputValue, setValue] = useState('');\n    const handleInputChange = ( e ) => {\n        setValue(e.target.value);\n    }\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2 ) {\n\n            setCategories(cats => [ inputValue, ...cats ]);\n            setValue('');\n\n        }\n       \n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <br />\n            <label>Buscar Gifs</label>\n            <br />\n            <br />\n            <input \n                placeholder=\"Escribe aquí tu búsqueda, luego presiona enter\"\n                type=\"text\" \n                value={ inputValue } \n                onChange={ handleInputChange }\n            ></input>\n            <br />\n            <br />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};\n","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n    // console.log(id,title,url);\n\n    return (\n        <div className=\"card\">\n            \n            <img src={ url } alt={ title } />\n            <p> {title} </p>\n            \n        </div>\n    )\n}\n","export const getGifs = async( category ) => {\n        \n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=100&api_key=tOABssXIdHe3QlBdR0TSMB0aGdH8a6PW`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized.url\n        }\n    })\n\n    // console.log(gifs);\n    // setImages( gifs );\n    return gifs;\n\n}","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/userFetchGifs';\n\nexport const GifGrid = ( { category } ) => {\n\n    // const [images, setImages] = useState([]);\n    const {data: images, loading} = useFetchGifs(category); \n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__pulse\">Mostrando {category}</h3>\n\n            { loading && <p>Cargando...</p> }\n            <div className=\"card-grid\">                \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={img.id}\n                            { ...img }\n                        />\n                    ))\n                }            \n            </div>\n        </>\n    )\n}\n","import { useState, useEffect} from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\n// custom Hooks\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    // useEffect previene que se ejecute la funcion getGif en cada render, se ejecuta\n    // solo cuando el componente es renderizado la primera vez\n    useEffect( () => {\n        getGifs( category )\n            .then(imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false\n                })\n            })\n            // .then( imgs => setImages(imgs) )\n    }, [category]);\n\n    return state;\n\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n// import ReactDom from 'react-dom';\n\nexport const GifExpertApp = () => {\n\n    // const cartegories = ['One Punch','Samurai X','Dragon Ball'];\n    const [categories, setCategories] = useState(['Fortnite']);\n\n    // const handleAdd = () => {\n\n    //     // Dos formas de agregar elementos al array\n    //     // setCategories( [...categories, 'HunterXHunter'] );\n    //     setCategories( cats => [ ...cats, 'GOT'] );\n    // }\n    \n    return (\n        <>\n            <h2>Buscador de GIFS TheValens</h2>\n            <hr />\n\n            <AddCategory setCategories={ setCategories }></AddCategory>\n\n            <ol>\n                {\n                    categories.map( (category) =>  (                        \n                        <GifGrid \n                            key={ category }\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n\n        </>\n    );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\n// styles\nimport 'animate.css';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}